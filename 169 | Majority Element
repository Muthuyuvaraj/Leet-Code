Example 1:

Input: nums = [3,2,3]
Output: 3
Example 2:

Input: nums = [2,2,1,1,1,2,2]
Output: 2
 

Constraints:

n == nums.length
1 <= n <= 5 * 104
-109 <= nums[i] <= 109


Sorting Approach
The majority element must be at index ⌊n / 2⌋ after sorting because it appears more than half the time.

Algorithm:
Sort the array.
Return the element at index ⌊n / 2⌋.


-----------------------------------------------------------------------------

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        nums.sort()
        return nums[len(nums) // 2]


